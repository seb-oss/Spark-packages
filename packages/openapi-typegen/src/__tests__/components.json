{
  "openapi": "3.0.0",
  "info": {
    "title": "Example API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "List users",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/LimitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                },
                "examples": {
                  "userListExample": {
                    "$ref": "#/components/examples/UserListExample"
                  }
                }
              }
            },
            "headers": {
              "X-Rate-Limit": {
                "$ref": "#/components/headers/X-Rate-Limit"
              },
              "apiKey": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserCreate"
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {
              "x-api-key": {
                "schema": {
                  "type": "string"
                },
                "required": true
              }
            },
            "links": {
              "UserLink": {
                "$ref": "#/components/links/UserLink"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "userType": {
            "$ref": "#/components/schemas/UserType"
          },
          "userDetails": {
            "$ref": "#/components/schemas/UserDetails"
          }
        },
        "required": ["id"],
        "example": {
          "id": "123e4567-e89b-12d3-a456-426655440000",
          "name": "John Doe"
        }
      },
      "UserList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "UserType": {
        "type": "string",
        "enum": ["HUMAN", "SYSTEM"]
      },
      "HumanDetails": {
        "properties": {
          "name": { "type": "string" }
        }
      },
      "SystemDetails": {
        "properties": {
          "version": { "type": "string" }
        }
      },
      "UserDetails": {
        "oneOf": [
          { "$ref": "#/components/schemas/HumanDetails" },
          { "$ref": "#/components/schemas/SystemDetails" }
        ],
        "discriminator": {
          "propertyName": "userType",
          "mapping": {
            "HUMAN": "#/components/schemas/HumanDetails",
            "SYSTEM": "#/components/schemas/SystemDetails"
          }
        }
      }
    },
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "description": "Page number of the results to fetch.",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 1
        }
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "description": "Number of results per page.",
        "required": false,
        "schema": {
          "type": "integer",
          "example": 10
        }
      }
    },
    "examples": {
      "UserExample": {
        "value": {
          "id": "123e4567-e89b-12d3-a456-426655440000",
          "name": "John Doe"
        }
      },
      "UserListExample": {
        "value": [
          {
            "id": "123e4567-e89b-12d3-a456-426655440000",
            "name": "John Doe"
          },
          {
            "id": "e89b12d3-4567-123e-4266-554400006789",
            "name": "Jane Smith"
          }
        ]
      }
    },
    "requestBodies": {
      "UserCreate": {
        "description": "User object that needs to be added to the store",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            },
            "examples": {
              "userCreateExample": {
                "$ref": "#/components/examples/UserExample"
              }
            }
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication information is missing or invalid",
        "headers": {
          "WWW-Authenticate": {
            "schema": {
              "type": "string",
              "example": "Bearer realm=\"example\""
            }
          }
        }
      }
    },
    "headers": {
      "X-Rate-Limit": {
        "description": "The number of allowed requests in the current period",
        "schema": {
          "type": "integer",
          "example": 60
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    },
    "links": {
      "UserLink": {
        "operationId": "getUserById",
        "parameters": {
          "userId": "$response.body#/id"
        }
      }
    }
  }
}
